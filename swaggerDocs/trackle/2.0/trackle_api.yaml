swagger: '2.0'
info:
  version: 2.0.0
  title: trackle REST API
  description: |-
    This is the definition of the trackle REST API containing the following parts:|
    - getting data (from device and user input) for one day or a range or days
    - endpoints to create and update userinput
    - getting trackle RAW data of sleeping periods
basePath: /api/trackleService/v2
produces:
  - application/json
paths:
  /check:
    get:
      tags:
        - trackle
        - health
      summary: health monitor
      description: allows a quick check if the service is still up.
      responses:
        '200':
          description: everything is fine
          schema:
            $ref: '#/definitions/HealthResponse200'
        '400':
          description: something is not fine
          schema:
            $ref: '#/definitions/HealthResponse400'
  /deepCheck:
    get:
      tags:
        - trackle
        - health
      summary: health monitor deep check
      description: allows a deep check of the service
      responses:
        '200':
          description: everything is fine
          schema:
            $ref: '#/definitions/DeepCheckHealthResponse200'
        '500':
          description: something is not fine
          schema:
            $ref: '#/definitions/DeepCheckHealthResponse500'
  /claim:
    post:
      tags:
        - trackle
        - sensor
      summary: CLAIM sensor
      description: 'prerequisition: trackle sensor and app already performed a handshake with the ubrich-trackle-key app found a trackle sensor and want to claim it; afterwards app and sensor can communicate trust worthy'
      parameters:
        - in: header
          name: Authorization
          description: Bearer token identifying the related user
          required: true
          type: string
        - in: body
          name: claimRequestSigned
          description: 'data of the found sensor the app want to claim, signed by app'
          schema:
            $ref: '#/definitions/ClaimRequestSigned'
      responses:
        '200':
          description: Successful response; return "ok" when claiming request was successful
          schema:
            type: string
            enum:
              - ok
        '400':
          description: Not successful response
          schema:
            $ref: '#/definitions/ClaimErrorResponse'
  /unclaim:
    post:
      tags:
        - trackle
        - sensor
      summary: UNCLAIM sensor
      description: 'prerequisition: user claimed given trackle sensor by app user want to unclaim his claimed trackle sensor; because only one trackle sensor can be claimed with a user account at the same time'
      parameters:
        - in: header
          name: Authorization
          description: Bearer token identifying the related user
          required: true
          type: string
        - in: body
          name: unclaimRequestSigned
          description: 'id of sensor the app want to unclaim, signed by app'
          schema:
            $ref: '#/definitions/ClaimRequestSigned'
      responses:
        '200':
          description: Successful response; return "ok" when unclaiming request was successful
          schema:
            type: string
            enum:
              - ok
        '400':
          description: Not successful response
          schema:
            $ref: '#/definitions/UnclaimErrorResponse'
  /userInput:
    post:
      tags:
        - trackle
        - user input
      summary: CREATE user input
      description: user set properties and inserted data for a day
      parameters:
        - in: header
          name: Authorization
          description: Bearer token identifying the related user
          required: true
          type: string
        - in: body
          name: userInputSigned
          description: 'the data the user inserted and uploaded for one day, signed by the app'
          schema:
            $ref: '#/definitions/UserInputSigned'
      responses:
        '200':
          description: 'Successful response; returns the user input signed by the app, wrapped in an object documenting that the server accepted and signed that content sent by the app'
          schema:
            $ref: '#/definitions/UserInputAcceptedSigned'
        '400':
          description: Not successful response
          schema:
            $ref: '#/definitions/ErrorResponse'
    put:
      tags:
        - trackle
        - user input
      summary: CREATE or UPDATE user input
      description: user set properties and inserted data or update existing data for a day; !!important!! properties that had already been set in an earlier operation will be deleted by an update call when they are missing in the userInput object!!
      parameters:
        - in: header
          name: Authorization
          description: Bearer token identifying the related user
          required: true
          type: string
        - in: body
          name: userInputSigned
          description: 'the updated data the user inserted and uploaded for one day, signed by the app'
          schema:
            $ref: '#/definitions/UserInputSigned'
      responses:
        '200':
          description: 'Successful response; returns the user input signed by the app, wrapped in an object documenting that the server accepted and signed that content sent by the app'
          schema:
            $ref: '#/definitions/UserInputAcceptedSigned'
        '400':
          description: Not successful response
          schema:
            $ref: '#/definitions/ErrorResponse'
  /user/register:
    post:
      tags:
        - trackle
        - user
      summary: register a user
      description: register a user and store their public and private key (private can only be decrypted on user's device)
      parameters:
        - in: body
          name: register
          description: all information needed to register a user
          schema:
            $ref: '#/definitions/RegistrationObject'
      responses:
        '200':
          description: success
        '400':
          description: failed
          schema:
            $ref: '#/definitions/RegistrationError'
  '/day/{day}':
    get:
      tags:
        - trackle
        - day
      parameters:
        - in: header
          name: Authorization
          description: Bearer token identifying the related user
          required: true
          type: string
        - in: path
          name: day
          description: date of the day the user requests data for
          required: true
          type: string
          format: date
      summary: data for a day
      description: 'Query all available data for one day, that the authenticated user has inserted for that day or that have been measured by the user''s device or that have been aggregated from known information in the backend'
      responses:
        '200':
          description: Successful response; returns an trackle day info object
          schema:
            $ref: '#/definitions/DayInfoObject'
        '400':
          description: Not successful response
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/day/from/{fromDay}/until/{untilDay}':
    get:
      tags:
        - trackle
        - day
      parameters:
        - in: header
          name: Authorization
          description: Bearer token identifying the related user
          required: true
          type: string
        - in: path
          name: fromDay
          description: first day from date range the user requests data for
          required: true
          type: string
          format: date
        - in: path
          name: untilDay
          description: last day from date range the user requests data for
          required: true
          type: string
          format: date
      summary: data for a day
      description: 'Query all available data for a range of days, that the authenticated user has inserted for that days or that have been measured by the user''s device or that have been aggregated from known information in the backend'
      responses:
        '200':
          description: Successful response; returns an array of trackle day info objects
          schema:
            type: array
            items:
              $ref: '#/definitions/DayInfoObject'
        '400':
          description: Not successful response
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/sleepingPeriod/{sleepingPeriodId}':
    get:
      tags:
        - trackle
        - sleepingPeriod
      summary: sleeping period temperature curve
      description: return the data that has been measured during the sleeping period
      parameters:
        - in: path
          name: sleepingPeriodId
          description: id of the sleeping period curve; UUID
          required: true
          type: string
        - in: header
          name: Authorization
          description: Bearer token identifying the related user
          required: true
          type: string
      responses:
        '200':
          description: Successful response; returns the requested sleeping period temperature curve
          schema:
            $ref: '#/definitions/SleepingPeriodObject'
        '400':
          description: Not successful response
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/user/check/{hashedEmail}':
    get:
      tags:
        - trackle
        - profile
      summary: CHECK if user exists
      description: check existance of user by hashed email address
      parameters:
        - in: path
          name: hashedEmail
          description: hashed email address
          required: true
          type: string
      responses:
        '200':
          description: Successful response; returns if user for given email address already exists or not
          schema:
            type: object
            required:
              - exists
            properties:
              exists:
                type: boolean
        '400':
          description: Not successful response; especially if user already exists
          schema:
            $ref: '#/definitions/ErrorResponse'
  /user/info:
    post:
      tags:
        - trackle
        - profile
      summary: CREATE user
      description: create user by email address and display name; a user for given email address MUST NOT exist already
      parameters:
        - in: header
          name: Authorization
          description: Bearer token identifying the related user
          required: true
          type: string
        - in: body
          name: userInfoSigned
          description: 'the user data the user inserted to create an account, signed by the app'
          schema:
            $ref: '#/definitions/UserInfoSigned'
      responses:
        '200':
          description: 'Successful response; returns the created user info object, containing the account creation timestamp'
          schema:
            $ref: '#/definitions/UserInfoAcceptedSigned'
        '400':
          description: Not successful response; especially if user already exists
          schema:
            $ref: '#/definitions/ErrorResponse'
    get:
      tags:
        - trackle
        - profile
      summary: READ user info
      description: returns user info account data
      parameters:
        - in: header
          name: Authorization
          description: Bearer token identifying the related user
          required: true
          type: string
      responses:
        '200':
          description: Successful response; returns the requested user info
          schema:
            $ref: '#/definitions/UserInfoAcceptedSigned'
        '400':
          description: Not successful response; especially if user doesn't exist
          schema:
            $ref: '#/definitions/ErrorResponse'
  /user/settings:
    post:
      tags:
        - trackle
        - profile
      summary: CREATE user settings
      description: set user specific settings
      parameters:
        - in: header
          name: Authorization
          description: Bearer token identifying the related user
          required: true
          type: string
        - in: body
          name: userSettingsSigned
          description: 'user settings the user inserted initially, signed by the app'
          schema:
            $ref: '#/definitions/UserSettingsSigned'
      responses:
        '200':
          description: 'Successful response; returns the user settings signed by the app, wrapped in an object documenting that the server accepted and signed that content sent by the app'
          schema:
            $ref: '#/definitions/UserSettingsAcceptedSigned'
        '400':
          description: Not successful response
          schema:
            $ref: '#/definitions/ErrorResponse'
    put:
      tags:
        - trackle
        - profile
      summary: UPDATE user settings
      description: update user specific settings
      parameters:
        - in: header
          name: Authorization
          description: Bearer token identifying the related user
          required: true
          type: string
        - in: body
          name: userSettingsSigned
          description: 'user settings the user changed, signed by the app'
          schema:
            $ref: '#/definitions/UserSettingsSigned'
      responses:
        '200':
          description: 'Successful response; returns the user settings signed by the app, wrapped in an object documenting that the server accepted and signed that content sent by the app'
          schema:
            $ref: '#/definitions/UserSettingsAcceptedSigned'
        '400':
          description: Not successful response
          schema:
            $ref: '#/definitions/ErrorResponse'
    get:
      tags:
        - trackle
        - profile
      summary: READ user settings
      description: returns user specific settings
      parameters:
        - in: header
          name: Authorization
          description: Bearer token identifying the related user
          required: true
          type: string
      responses:
        '200':
          description: 'Successful response; returns the user settings signed by the app, wrapped in an object documenting that the server accepted and signed that content sent by the app'
          schema:
            $ref: '#/definitions/UserSettingsAcceptedSigned'
        '400':
          description: Not successful response
          schema:
            $ref: '#/definitions/ErrorResponse'
  /cycle/stats:
    get:
      tags:
        - trackle
        - profile
      summary: READ user cycle statistics
      description: return statistics about users cycles analysed from collected measured temperatures and user inputs
      parameters:
        - in: header
          name: Authorization
          description: Bearer token identifying the related user
          required: true
          type: string
      responses:
        '200':
          description: Successful response; returns the requested user cycle statistics
          schema:
            $ref: '#/definitions/CycleStatsSigned'
        '400':
          description: Not successful response
          schema:
            $ref: '#/definitions/ErrorResponse'
  /user/profile:
    get:
      tags:
        - trackle
        - profile
      summary: READ user profile
      description: 'returns user profile containing user info, user settings and cycle statistics'
      parameters:
        - in: header
          name: Authorization
          description: Bearer token identifying the related user
          required: true
          type: string
      responses:
        '200':
          description: Successful response; returns the requested user profile
          schema:
            $ref: '#/definitions/UserProfile'
        '400':
          description: Not successful response; especially if user doesn't exist
          schema:
            $ref: '#/definitions/ErrorResponse'
definitions:
  SignedObject:
    type: object
    discriminator: SignedObject
    description: the additional contained property/object is signed by the signature
    required:
      - signature
      - signatureCreated
    properties:
      signature:
        type: string
        description: signature the payload has been signed with
      signatureCreated:
        type: string
        format: date-time
        description: the timestamp when this signature was created
  AcceptedSignedObject:
    allOf:
      - $ref: '#/definitions/SignedObject'
      - type: object
        discriminator: AcceptedSignedObject
        description: 'the additional contained property/object is signed by the app, that has been accepted and signed by server afterwards'
        required:
          - acceptedDate
        properties:
          acceptedDate:
            type: string
            format: date-time
            description: timestamp when server accepted the created or last updated signed data
          created:
            type: string
            format: date-time
            description: timestamp of creation date
          lastUpdated:
            type: string
            format: date-time
            description: timestamp when this data has been last updated
  ErrorResponseObject:
    discriminator: ErrorResponseObject
    type: object
    description: error object with error code and message
    required:
      - apiVersion
      - status
      - error
    properties:
      apiVersion:
        type: string
      status:
        type: string
        description: KO because it's an error
      error:
        type: object
        required:
          - errorId
          - errorMessage
        properties:
          errorId:
            type: string
          errorMessage:
            type: string
  ClaimRequestSigned:
    description: claim request signed by app
    allOf:
      - $ref: '#/definitions/SignedObject'
      - type: object
        properties:
          hashedHwDeviceId:
            type: string
            description: hashed hardware device id of trackle sensor the app want to claim
          timestamp:
            type: string
            format: date-time
            description: timestamp when the app sent the claim request to the backend
  ClaimErrorResponse:
    description: possible errors for claiming request
    allOf:
      - $ref: '#/definitions/ErrorResponseObject'
      - type: object
        properties:
          error:
            type: object
            properties:
              errorId:
                type: string
                enum:
                  - ErrorUnknownDevice
                  - ErrorDeviceInvalid
                  - ErrorDeviceAlreadyClaimed
                  - ErrorTimeOut
                  - ErrorNotHandled
                  - ErrorFatalIntern
                  - ErrorMissingParams
                  - ErrorParseJson
                  - ErrorInvalidSignature
              errorMessage:
                type: string
                enum:
                  - device id is unknown
                  - device id is invalid
                  - device which should be claimed is already claimed by another user
                  - request could not be processed in time
                  - request could not be handled
                  - fatal internal error
                  - missing parameters
                  - cannot parse incoming json doc
                  - Verification of signature failed
  UnclaimErrorResponse:
    description: possible errors for unclaiming request
    allOf:
      - $ref: '#/definitions/ErrorResponseObject'
      - type: object
        properties:
          error:
            type: object
            properties:
              errorId:
                type: string
                enum:
                  - ErrorUnknownDevice
                  - ErrorDeviceInvalid
                  - ErrorDeviceNoClaimedByUser
                  - ErrorTimeOut
                  - ErrorNotHandled
                  - ErrorFatalIntern
                  - ErrorMissingParams
                  - ErrorParseJson
                  - ErrorInvalidSignature
              errorMessage:
                type: string
                enum:
                  - device id is unknown
                  - device id is invalid
                  - device is not claimed by requesting user
                  - request could not be processed in time
                  - request could not be handled
                  - fatal internal error
                  - missing parameters
                  - cannot parse incoming json doc
                  - Verification of signature failed
  RegistrationError:
    allOf:
      - $ref: '#/definitions/ErrorResponse'
    example:
      version: '1.0'
      status: NOK
      errorType: RegistrationError
      errorMessage: failed to create user record
  DayInfoObject:
    type: object
    description: all available data for one day. From user input the authenticated user inserted or that have been measured by the user's device or that have been aggregated from known information in the backend
    properties:
      id:
        type: string
        description: UUID to reference this DayInfoObject
      userId:
        type: string
        description: UUID as a reference to the user/owner of this data
      date:
        type: string
        format: date-time
        description: the day this data is about
      aggregatedSigned:
        description: aggregated data of this day signed by server
        allOf:
          - $ref: '#/definitions/SignedObject'
          - type: object
            properties:
              aggregated:
                type: object
                description: the measured data and/or aggregated information for this day
                properties:
                  date:
                    type: string
                    format: date-time
                    description: the day this data is about
                  instantTime:
                    type: object
                    description: 'values at the given instant time (defined by NFP as the best instant time to measure the temperature every day, adjusted by the user)'
                    properties:
                      temperature:
                        type: number
                        format: float
                        description: temperature measured at given instant time
                      timestamp:
                        type: string
                        format: date-time
                        description: the real timestamp when the instant time temperature is measured; it is the nearest measured value round about the instantTime.desiredTime
                      desiredTime:
                        type: string
                        description: 'instant time (given by NFP and adjusted by the user) when the temperature is and will be measured every day; in full-time format (e.g. 06:00:00.000Z)'
                  basal:
                    type: object
                    description: lowest measured values of the whole sleeping period of that day
                    properties:
                      temperature:
                        type: number
                        format: double
                        description: lowest measured temperature of the whole sleeping period of that day
                      sleepingPeriodId:
                        type: string
                        description: UUID of the sleeping period during which this basal temperature is measured (for drilldown to sleeping period temperature)
                      timestamp:
                        type: string
                        format: date-time
                        description: the timestamp when the basal temperature is measured the first time during the sleeping period
                  cycle:
                    type: object
                    description: user's cycle during the given date
                    properties:
                      id:
                        type: string
                        description: UUID of the cycle
                      counter:
                        type: integer
                        format: int32
                        description: the number of the cycle; all cycles measured with trackle are numbered consecutively
                  sleepingPeriodIds:
                    type: array
                    items:
                      type: string
                      description: 'UUIDs of all sleeping periods measured during this day; if the user sleeps several time during one day and always uses the device or removes the device temporarily during the night, several sleeping periods are generated'
                  cycleDayCounter:
                    type: integer
                    format: int32
                    description: number of the day inside the cycle (every cycle starts with day number 1)
                  fertile:
                    type: object
                    description: 'fertile state of the day, if the user is fertile or not'
                    properties:
                      state:
                        type: boolean
                        description: true if the user is fertile at that day
                      prognosis:
                        type: boolean
                        description: true if the fertility of this day is a prognosis; this is the case if the ovulation of this cycle has not yet been measured
                      ovulation:
                        type: boolean
                        description: true if the ovulation probably happened at this day
                  menstruation:
                    type: object
                    description: 'menstruation state of the day; menstruation is aggregated by backend from bleedingIntensity inserted by user; if bleeding implies menstruation, intermenstrual bleeding or even ovulation depends on intensitiy and moment of bleeding during user''s cycle'
                    properties:
                      state:
                        type: boolean
                        description: true if this day is during the menstruation of the user
                      prognosis:
                        type: boolean
                        description: true if the menstruation state of this day is a prognosis; this is the case if this menstruation is in the future or (maybe) user has not inserted bleeding at a day the backend expects user's menstruation
                  intermenstrualBleeding:
                    type: object
                    description: 'set if an intermenstrual bleeding uccurred at the day; aggregated by backend from bleedingIntensity inserted by user; if bleeding implies menstruation, intermenstrual bleeding or even ovulation depends on intensitiy and moment of bleeding during user''s cycle'
                    properties:
                      state:
                        type: boolean
                        default: false
                        description: true if intermenstrual bleeding uccurred at the day
                  created:
                    type: string
                    format: date-time
                    description: timestamp of creation date
                  lastUpdated:
                    type: string
                    format: date-time
                    description: timestamp when this data has been updated last
      userInputAcceptedSigned:
        $ref: '#/definitions/UserInputAcceptedSigned'
    example:
      id: c1460993-e8cd-47cb-a059-0755e4855757
      userId: 534a3ac1-aba5-4bf8-a595-7ea0ae4dba74
      date: '2017-09-20T22:00:00.000Z'
      aggregatedSigned:
        aggregated:
          date: '2017-09-20T00:00:00.000Z'
          instantTime:
            temperature: 36.8
            timestamp: '2017-09-20T05:58:00.000Z'
            desiredTime: '06:00:00.000Z'
          basal:
            temperature: 36.6
            sleepingPeriodId: 4a904a91-cabf-417e-981c-5be70654ae98
            timestamp: '2017-08-20T04:34:17.000Z'
          cycle:
            id: eb74fad9-cec2-4c9b-b5e4-64b102bab987
            counter: 3
          sleepingPeriodIds:
            - b3c5ecf8-3e13-4912-a4e8-ae42f1ad1315
            - 4a904a91-cabf-417e-981c-5be70654ae98
          cycleDayCounter: 3
          fertile:
            state: false
            ovulation: false
            prognosis: true
          menstruation:
            state: false
            prognosis: true
          intermenstrualBleeding:
            state: false
          created: '2017-09-20T08:20:00.000Z'
          lastUpdated: '2017-09-20T12:29:22.717Z'
        signature: 'a server side signature :)'
        signatureCreated: '2017-09-20T08:22:00.000Z'
      userInputAcceptedSigned:
        userInputAccepted:
          acceptedDate: '2017-09-20T12:29:22.717Z'
          userInputSigned:
            userInput:
              date: '2017-09-20T22:00:00.000Z'
              payload:
                bleedingIntensity: 0.2
                cervicalMucus: s+
                disturbingFactors:
                  - sleepLately
                  - alcohol
                  - emotionalPressure
            signature: 'a client side signature :)'
            signatureCreated: '2017-09-20T08:22:00.000Z'
          created: '2017-09-20T08:20:00.000Z'
          lastUpdated: '2017-09-20T08:22:03.500Z'
        signature: 'another server side signature :)'
        signatureCreated: '2017-19-19T08:22:03.000Z'
  UserInputAcceptedSigned:
    description: 'current state of the user input for that day, signed by the app, accepted and signed by the server'
    allOf:
      - $ref: '#/definitions/AcceptedSignedObject'
      - type: object
        properties:
          userInputSigned:
            $ref: '#/definitions/UserInputSigned'
  UserInputSigned:
    description: current state of the user input for that day signed by the app
    allOf:
      - $ref: '#/definitions/SignedObject'
      - type: object
        properties:
          userInput:
            $ref: '#/definitions/UserInput'
  RegistrationObject:
    description: all information required to register a user
    type: object
    properties:
      email:
        type: string
        description: user's email address
      encryptedPrivateKey:
        type: string
        description: (BASE64 encoded) encrypted private key to enable crypto operations on multiple devices
      hashedSecret:
        type: string
        description: SHA512( lower(trim(passphrase)) + lower(trim(email)) )
      publicKey:
        type: object
        description: public key JSON as accepted by ubirch-key-service
      locale:
        type: string
        description: ISO 639 language code
  UserInput:
    type: object
    description: created or last updated user input for that day
    properties:
      date:
        type: string
        format: date-time
        description: day for which the user inserted this data
      payload:
        type: object
        description: object containing key value pairs of user input
        properties:
          cervicalMucus:
            type: string
            description: |-
              cervix mucus consistance / Cervixschleimsymptom
              * keine Angabe (default) [null] * t (nichts gesehen) [t] * ∅ (nicht sichtbar) [-] * f (normale Qualität) [f] * s (sehr gute Qualität) [s] * s+ (exzellente Qualität) [s+]
            enum:
              - t
              - '-'
              - f
              - s
              - s+
          cervixPosition:
            type: string
            description: |-
              position of cervix / Muttermundstand
              * keine Angabe (default) [null] * tiefstehend [deep] * mittel [medium] * hochstehend [high]
            enum:
              - deep
              - medium
              - high
          cervixOpenness:
            type: string
            description: |-
              is the cervix opened or closed / Muttermundöffnung
              * keine Angabe (default) [null] * geschlossen [closed] * leicht geöffnet [partlyOpen] * geöffnet [open]
            enum:
              - closed
              - partlyOpen
              - open
          cervixSoftness:
            type: string
            description: |-
              is the cervix soft or hard / Muttermundbeschaffenheit
              * keine Angabe (default) [null] * weich [soft] * hart (wie Nasenknorpel) [firm]
            enum:
              - soft
              - firm
          intercourse:
            type: boolean
            description: |-
              Geschlechtsverkehr
              * keine Angabe (default) [null] * ja [true] * nein [false]
          additionalContraceptive:
            type: boolean
            description: |-
              zusätzliche Verhütung; ONLY IF intercourse == true
              * keine Angabe (default) [null] * geschützt [true] * ungeschützt [false]
          bleedingIntensity:
            type: number
            format: float
            description: |-
              Stärke der Blutung; currently only predefined values
              * "-" (schwache Blutung) [0.2] * "o" (mittelstarke Blutung) [0.5] * + (starke Blutung) [1] * "." (Schmierblutung) [0.1]
            enum:
              - 0.1
              - 0.2
              - 0.5
              - 1
          disturbingFactors:
            type: array
            description: |-
              Störfaktoren; multiselectable; predefined values; additional values can be added when "Sonstiges" is selected, then addDisturbingFactor can be filled

              * ungewohnt spätes Zubettgehen [sleepLately]
              * ungewohnter Alkoholgenuss [alcohol]
              * Stress [stress]
              * seelische Belastung [emotionalPressure]
              * Zeitumstellung [clockChange]
              * Zeitverschiebung [timeShift]
              * kurze oder gestörte Nachtruhe[shortNight]
              * Essen spätabends [lateSupper]
              * Umgebungswechsel (Reisen, Urlaub, Klimawechsel) [changeOfEnvironment]
              * Erkrankung und Unpässlichkeiten/Fieber [fever]
              * andere Krankheit [illness]
              * Medikament [medicine]
              * Thermometerwechsel im Zyklus [changedSensor]
              * Aufregung [excitement]
              * Feiern spätabends [party]
              * Schichtarbeit [shiftWork]
              * Sonstiges [other]
            items:
              type: string
              enum:
                - sleepLately
                - alcohol
                - stress
                - emotionalPressure
                - clockChange
                - timeShift
                - shortNight
                - lateSupper
                - changeOfEnvironment
                - fever
                - illness
                - medicine
                - changedSensor
                - excitement
                - party
                - shiftWork
                - other
          addDisturbingFactor:
            type: string
            maxLength: 50
            description: free text field to add additional disturbing factor; ONLY IF "other" is selected in disturbingFactors
          info:
            type: string
            description: notes / Notizen
            maxLength: 500
  UserProfile:
    type: object
    description: |-
      contains all data for profile for READ access
      * user info * user specific settings * cycle statistics
    properties:
      userInfo:
        $ref: '#/definitions/UserInfoAcceptedSigned'
      userSettings:
        $ref: '#/definitions/UserSettingsAcceptedSigned'
      cycleStats:
        $ref: '#/definitions/CycleStatsSigned'
  UserInfoAcceptedSigned:
    description: 'user info, signed by the app, accepted and signed by the server'
    allOf:
      - $ref: '#/definitions/AcceptedSignedObject'
      - type: object
        properties:
          userInfoSigned:
            $ref: '#/definitions/UserInfoSigned'
          activeSince:
            type: string
            format: date-time
            description: timestamp when user created her trackle account; cannot be set by user
  UserInfoSigned:
    description: user info signed by app
    allOf:
      - $ref: '#/definitions/SignedObject'
      - type: object
        properties:
          userInfo:
            $ref: '#/definitions/UserInfo'
  UserInfo:
    type: object
    required:
      - email
    description: user account specific data
    properties:
      name:
        type: string
        description: display name to communicate with user in app
      email:
        type: string
        description: email address of user; currently used for user identification
  UserSettingsAcceptedSigned:
    description: 'current state of the user specific settings, signed by the app, accepted and signed by the server'
    allOf:
      - $ref: '#/definitions/AcceptedSignedObject'
      - type: object
        properties:
          userSettingsSigned:
            $ref: '#/definitions/UserSettingsSigned'
  UserSettingsSigned:
    description: user settings signed by app
    allOf:
      - $ref: '#/definitions/SignedObject'
      - type: object
        properties:
          userSettings:
            $ref: '#/definitions/UserSettings'
  UserSettings:
    type: object
    description: user specific settings; key value pairs; can be changed by user
    additionalProperties:
      type: string
  CycleStatsSigned:
    description: cycle stats of the user signed by backend
    allOf:
      - $ref: '#/definitions/SignedObject'
      - type: object
        properties:
          cycleStats:
            $ref: '#/definitions/CycleStats'
  CycleStats:
    type: object
    description: statistics about users cycles analysed from collected measured temperatures and user inputs
    properties:
      cycle:
        type: object
        description: cycle specific statistics
        properties:
          currentNo:
            type: integer
            description: number of current cycle; start counting with cycle 0
          measuredCount:
            type: integer
            description: number of measured cycles
          avLength:
            type: number
            format: float
            description: average length of all measured cycles
          shortest:
            type: integer
            description: shortest cycle duration of all measured cycles
          longest:
            type: integer
            description: longest cycle duration of all measured cycles
      menstruation:
        type: object
        description: menstruation specific statistics
        properties:
          avLength:
            type: number
            format: float
            description: average length of all determined menstruations; determined from user input of bleeding intensity
          nextDate:
            type: string
            format: date-time
            description: 'forecast on which day the next menstruation should start; ends with time 00:00:00'
          nextLength:
            type: integer
            description: forecast about duration of the next menstruation
      fertile:
        type: object
        description: fertility specific statistics
        properties:
          infertileDaysAtCycleBegin:
            type: number
            format: float
            description: number of infertile days at the beginning of each cycle
          avLengthFirstHalf:
            type: number
            format: float
            description: average length of the duration of cycle before ovulation
          avLengthSecondHalf:
            type: number
            format: float
            description: average length of the duration of cycle after ovulation
      ovulation:
        type: object
        description: ovulation specific statistics
        properties:
          lastConfirmed:
            type: string
            format: date-time
            description: 'last date for which backend determines an ovulation; ends with time 00:00:00'
          nextDate:
            type: string
            format: date-time
            description: 'forecast on which day the next ovulation should happen; ends with time 00:00:00'
          avCycleDay:
            type: number
            format: float
            description: 'average number of days of cycle after which ovulation of user happens '
    example:
      cycle:
        currentNo: 4
        measuredCount: 3
        avLength: 26.66
        shortest: 25
        longest: 28
      menstruation:
        avLength: 3.5
        nextDate: '2018-01-18T00:00:00.000Z'
        nextLength: 4
      fertile:
        infertileDaysAtCycleBegin: 5
        avLengthFirstHalf: 12.83
        avLengthSecondHalf: 13.78
      ovulation:
        lastConfirmed: '2017-12-20T00:00:00.000Z'
        nextDate: '2018-01-04T00:00:00.000Z'
        avCycleDay: 12.83
  TemperatureObject:
    type: object
    description: 'temperature value with timestamp of the measurement; can contain additional properties especially that this item is one of the lowest, a basal value, or a flag that and why this value should be ignored'
    required:
      - id
      - timestamp
      - temp
    properties:
      id:
        type: string
        description: UUID of the message sent from sensor containing this temperature value
      deviceId:
        type: string
        description: UUID of the trackle sensor the message containing this temperature value was sent from
      timestamp:
        type: string
        format: date-time
        description: the timestamp of the message; when this temperature value is measured by the trackle sensor
      temp:
        type: number
        format: float
        description: temperature value
      basal:
        type: boolean
        default: false
        description: if true then this item is a basal value as much as to say that this one of the values with the lowest temperature value of the whole nicht
      ignore:
        type: boolean
        default: false
        description: if true then this item should be ignored
      ignoreComment:
        type: string
        description: if ignore = true this contains the reason why this value should be ignored
    example:
      id: 18ceb213-7549-4e5c-914a-8c7b6f4bcdd7
      deviceId: d971aca0-7769-401b-a402-6c42c22be847
      timestamp: '2016-06-04T23:41:58.887Z'
      temp: 36.019999999999996
      basal: true
      ignore: true
      ignoreComment: out of body
  SleepingPeriodObject:
    type: object
    required:
      - id
      - deviceId
      - temperatures
    description: |-
      contains the measured temperature values of one sleeping period
      the data has been cleaned already
      - no duplicated values - no senseless values - cut off start and end values, during which the sensor isn't already in body or has not yet settled
      the data whith the basal values (minimum) are marked
    properties:
      id:
        type: string
        description: unique id of this sleeping period temperature curve; is used to drill down from cycle curve to sleeping period curve
      deviceId:
        type: string
        description: UUID of the trackle sensor this temperature values were measured with
      from:
        type: string
        format: date-time
        description: the timestamp of the first temperature value measured in this sleeping period
      to:
        type: string
        format: date-time
        description: the timestamp of the last temperature value measured in this sleeping period
      temperatures:
        description: |-
          all measured temperature values of the sleeping period
          - sorted by timestamp - in ascending order - with unique timestamps - intervals between timestamps do not need to be equal - basal values (minimum) are marked
        type: array
        items:
          $ref: '#/definitions/TemperatureObject'
    example:
      id: fb8bce6a-d7cb-4288-9aee-04ca627ab364
      deviceId: d971aca0-7769-401b-a402-6c42c22be847
      from: '2016-06-04T23:41:58.887Z'
      to: '2016-06-05T08:27:24.413Z'
      temperatures:
        - id: 18ceb213-7549-4e5c-914a-8c7b6f4bcdd7
          deviceId: d971aca0-7769-401b-a402-6c42c22be847
          timestamp: '2016-06-04T23:42:56.323Z'
          temperature: 35.2
          ignore: true
          ignoreComment: out of body
        - id: 1291b73e-bb7c-440c-a93b-9d75f3bcdb1c
          deviceId: d971aca0-7769-401b-a402-6c42c22be847
          timestamp: '2016-06-04T23:41:58.887Z'
          temp: 36.019999999999996
          basal: true
        - id: d90ee0a6-e7b6-45c6-bf59-028d960bdeec
          deviceId: d971aca0-7769-401b-a402-6c42c22be847
          timestamp: '2016-06-04T23:43:53.776Z'
          temperature: 36.25
  HealthResponse200:
    description: response if server is healthy
    type: object
    required:
      - version
      - status
      - message
    properties:
      version:
        type: string
      status:
        type: string
        enum:
          - OK
          - NOK
      message:
        type: string
        description: welcome string with build information ( $GO_PIPELINE_NAME / $GO_PIPELINE_LABEL / $GO_PIPELINE_REVISION )
    example:
      version: '1.0'
      status: OK
      message: Welcome to the ubirchTrackleService ( BUILD_trackle-service / 79 / noRev )
  HealthResponse400:
    allOf:
      - $ref: '#/definitions/HealthResponse200'
    example:
      version: '1.0'
      status: NOK
      message: this is some error message
  DeepCheckHealthResponse200:
    description: response of deep check if server is healthy
    type: object
    required:
      - status
      - message
    properties:
      status:
        type: string
        enum:
          - true
          - false
      message:
        type: array
        items:
          type: string
        description: array with all errors that occurred
    example:
      status: true
      message: []
  DeepCheckHealthResponse500:
    allOf:
      - $ref: '#/definitions/DeepCheckHealthResponse200'
    example:
      status: false
      message:
        - unable to connect to the database
  ErrorResponse:
    description: default error object with error code and message
    allOf:
      - $ref: '#/definitions/ErrorResponseObject'
      - type: object
        properties:
          error:
            type: object
            properties:
              errorId:
                type: string
                enum:
                  - ErrorTimeOut
                  - ErrorNotHandled
                  - ErrorFatalIntern
                  - ErrorMissingParams
                  - ErrorParseJson
                  - ErrorInvalidSignature
              errorMessage:
                type: string
                enum:
                  - request could not be processed in time
                  - request could not be handled
                  - fatal internal error
                  - missing parameters
                  - cannot parse incoming json doc
                  - Verification of signature failed
  TrackleError:
    description: trackle error response based on default ubirch error object
    type: object
    properties:
      version:
        type: string
        enum:
          - '1.0'
      status:
        type: string
        enum:
          - OK
          - NOK
      errorType:
        type: string
      errorMessage:
        type: string
        enum:
          - RegistrationError
